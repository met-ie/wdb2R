WDB2R
=====

R-scripts for extracting and converting data from the wdb system
Before running this scripts install R, and then install packages DBI and RPostgreSQL

Installation:
-------------
sudo apt-get install libudunits2-dev 

in R:
> install.packages("DBI")
> install.packages("RPostgreSQL")
> install.packages("udunits2")

Use
----

> source("readVerifWdb.R")

The function
readVerifWdb<-function(wmo_no,period,model,prm,prg,testMemory=false,testLatency=false)
extracts data for the given station numbers, time periods, parameters, models and prognosis lengths.

Output is an R.dataframe with a format similar to this
  wmo_no       time prog   DD.H8 FF.H8   TT.H8     P.H8  DD.UM4 FF.UM4   TT.UM4  P.UM4
1   10380 2011022201    1 173.824 3.358 260.137 1029.920 174.824 3.356 260.100 1029.800
2   10380 2011022202    2 178.778 3.506 259.849 1029.620 178.777 3.505 259.169 1029.610
3   10380 2011022203    3 181.600 3.231 259.648 1029.420 182.710 3.230 259.523 1029.420

with all values for one place/time/prog  on one row

call finish() to disconnect

Examples of use
---------------
mydf<-readVerifWdb(c(1317,1492),c(20120128,20120130),c("DEF","APP"),c("TT","P"),NULL)
mydf<-readVerifWdb(wmo_no=c(1317,1492),period=NULL,model=c("DEF","RAW","H12"),prm=c("TT","P"),prg=c(2,4,6)
mydf<-readVerifWdb(c(10800,10380,17250),c(20120131,20120203),c("DEF","APP","LOC"),c("TT","P"), c(18,36))



Performance testing
-------------------
> source("testWdb.R")
readVerifWdb can be called with testMemory=TRUE and/or testLatency=FALSE to do some perfomance testing

The function
testPerformance<-function(nplaces=NULL,nweeks=NULL,nmodels=NULL,nparams=NULL,nprogs=NULL,testLatency=TRUE,testMemory=TRUE)
tests latency and memory use for fetching a given number of places, weeks, models, parameters and proglengths. It will first browse the data base to find what is available.

Example
--------
testPerformance(nplaces=100,nweeks=12,nmodels=1,nparams=4,nprogs=10,testLatency=TRUE,testMemory=FALSE)->mydf